1. What do you understand by RESTful Web Services?
=> RESTful web services are services that follow REST architecture. 
=> REST stands for Representational State Transfer and uses HTTP protocol (web protocol) for implementation. 
=> These services are lightweight, provide maintainability, scalability, support communication among multiple applications 
that are developed using different programming languages. 
=> They provide means of accessing resources present at server required for the client via the web browser by means of 
request headers, request body, response body, status codes, etc.


2. What is a REST Resource?
=> Every content in the REST architecture is considered a resource. The resource is analogous to the object in the object-oriented programming world. 
=> They can either be represented as text files, HTML pages, images, or any other dynamic data.


3. What is URI?
=>Uniform Resource Identifier is the full form of URI which is used for identifying each resource of the REST architecture. URI is of the format:

	<protocol>://<service-name>/<ResourceType>/<ResourceID>

	There are 2 types of URI:
	 1. URL
	 2. URN
=>URN: Uniform Resource Name identifies the resource by means of a name that is both unique and persistent.
URN doesn’t always specify where to locate the resource on the internet. 
They are used as templates that are used by other parsers to identify the resource.

=>URL: Uniform Resource Locator has the information regarding fetching of a resource from its location.
Examples include:
http://abc.com/samplePage.html


4. What is the concept of statelessness in REST?
=>The REST architecture is designed in such a way that the client state is not maintained on the server. This is known as statelessness. 
=>The context is provided by the client to the server using which the server processes the client’s request. 
=>The session on the server is identified by the session identifier sent by the client.

5. What are HTTP Status codes?
These are the standard codes that refer to the predefined status of the task at the server. Following are the status codes formats available:

	1xx - represents informational responses
	2xx - represents successful responses
	3xx - represents redirects
	4xx - represents client errors
	5xx - represents server errors
	
	Most commonly used status codes are:

	200 - success/OK
	201 - CREATED - used in POST or PUT methods.
	304 - NOT MODIFIED - used in conditional GET requests to reduce the bandwidth use of the network. Here, the body of the response sent should be empty.
	400 - BAD REQUEST - This can be due to validation errors or missing input data.
	401 - UNAUTHORIZED - This is returned when there is no valid authentication credentials sent along with the request.
	403 - FORBIDDEN - sent when the user does not have access (or is forbidden) to the resource.
	404 - NOT FOUND - Resource method is not available.
	500 - INTERNAL SERVER ERROR - server threw some exceptions while running the method.
	502 - BAD GATEWAY - Server was not able to get the response from another upstream server.
	
6. What are the HTTP Methods?
HTTP Methods are also known as HTTP Verbs. 
They form a major portion of uniform interface restriction followed by the REST that specifies what action has to be followed to get the requested resource. 
Below are some examples of HTTP Methods:

	GET: This is used for fetching details from the server and is basically a read-only operation.
	POST: This method is used for the creation of new resources on the server.
	PUT: This method is used to update the old/existing resource on the server or to replace the resource.
	DELETE: This method is used to delete the resource on the server.
	PATCH: This is used for modifying the resource on the server.
	OPTIONS: This fetches the list of supported options of resources present on the server.
	The POST, GET, PUT, DELETE corresponds to the create, read, update, delete operations which are most commonly called CRUD Operations.


7. Define Messaging in terms of RESTful web services.
 The technique of sending a message from the REST client to the REST server in the form of an HTTP request and the server responding back with the response as HTTP Response is called Messaging.
 The messages contained constitute the data and the metadata about the message.
 
8. the core components of HTTP Request?
	In REST, any HTTP Request has 5 main components, they are:

	Method/Verb − This part tells what methods the request operation represents. Methods like GET, PUT, POST, DELETE, etc are some examples.
	URI − This part is used for uniquely identifying the resources on the server.
	HTTP Version − This part indicates what version of HTTP protocol you are using. An example can be HTTP v1.1.
	Request Header − This part has the details of the request metadata such as client type, the content format supported, message format, cache settings, etc.
	Request Body − This part represents the actual message content to be sent to the server.

9. the core components of HTTP Response?
	HTTP Response has 4 components:

	Response Status Code − This represents the server response status code for the requested resource. Example- 400 represents a client-side error, 200 represents a successful response.
	HTTP Version − Indicates the HTTP protocol version.
	Response Header − This part has the metadata of the response message. Data can describe what is the content length, content type, response date, what is server type, etc.
	Response Body − This part contains what is the actual resource/message returned from the server.
	
10. Define Addressing in terms of RESTful Web Services.
=>Addressing is the process of locating a single/multiple resources that are present on the server.
 This task is accomplished by making use of URI (Uniform Resource Identifier). The general format of URI is 

	<protocol>://<application-name>/<type-of-resource>/<id-of-resource>
	
